
server:
  port: 8000
# SERVICE_REGISTRY ----------------------------------------------------------------------------------------------------
eureka:
  instance:
    instance-id: ${spring.application.name}:${server.port}@${random.int}
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: ${SERVICE_REGISTRY_URL:http://0.0.0.0:8761/eureka}

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      x-forwarded:
        enabled: false
        for-enabled: true
        host-append: false
      routes:
        - id: user-service
          uri: http://localhost:8282/
          predicates:
            - Path=/user-service/**
        - id: inventory-service
          uri: http://localhost:8284/
          predicates:
            - Path=/inventory-service/**
        - id: order-service
          uri: http://localhost:8281/
          predicates:
            - Path=/order-service/**
        - id: product-service
          uri: http://localhost:8283/
          predicates:
            - Path=/product-service/**
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

  main:
    allow-bean-definition-overriding: true
jwt:
  time-refresh-key: 3600
  url-fetching-key: http://user-service/oauth/token_key
routing:
  public-apis: ${PUBLIC_API_PATTERN:\/.*\/public-api\/.*,\/actuator\/health,\/actuator\/info, \/.*\/oauth\/.*}
  internal-apis: ${INTERNAL_API_PATTERN:\/.*\/internal-api\/.*}

cors:
  config:
    allowed-origins: ${SIGNATURE_ALLOWED_ORIGINS:*}
    allowed-methods: ${SIGNATURE_ALLOWED_METHODS:*}
    allowed-headers: ${SIGNATURE_ALLOWED_HEADERS:*}
    exposed-headers: ${SIGNATURE_EXPOSED_ORIGINS:Content-Type,Authorization,Content-Length,X-Requested-With,Link,X-Total-Count}
    allow-credentials: ${SIGNATURE_ALLOWED_CREDENTIALS:false}
    max-age: ${SIGNATURE_MAX_AGE:3600}

logging:
  level:
    com:
      netflix:
        eureka=DEBUG:
